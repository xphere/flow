#!/bin/bash

library_init() {
    if is_setup; then
        library_check
    fi
}

library_check() {
    if ! command_exists "git"; then
        die "You need to have GIT installed"
    fi

    local MINIMUM_VERSION="1.8"
    if ! version_compare "$(git_version)" "$MINIMUM_VERSION"; then
        die "You need GIT $MINIMUM_VERSION at least, but $(git_version) found"
    fi
}

git_version() {
    local VERSION=$(git --version)
    echo ${VERSION//git version/}
}

git_root_dir() {
    git rev-parse --show-toplevel
}

git_has_branch() {
    git show-ref --quiet --verify "refs/heads/$1"
}

git_current_branch() {
    git rev-parse --abbrev-ref "HEAD"
}

git_current_rev() {
    git rev-parse "HEAD"
}

git_has_clean_index() {
    git diff-index --cached --quiet "HEAD"
}

git_has_clean_working_tree() {
    git diff-files --quiet -- && [ -z "$(git ls-files --exclude-standard --others)" ]
}

git_get_commit_message() {
    git show -s --format="%s" "${@:-HEAD}"
}

git_unsafe_commit() {
    git commit --no-verify -q -m "$@"
}

git_set_track() {
    local BRANCH="$1"
    local REMOTE="$2"
    local REMOTE_BRANCH="${3:-$1}"
    git branch "$BRANCH" -u "$REMOTE/$REMOTE_BRANCH" >&2
}

git_get_track() {
    local BRANCH="${1}"
    git rev-parse --abbrev-ref "${BRANCH}@{u}"
}

library_init
